# ingress.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress-microk8s
  labels:
    app: nginx-ingress-microk8s
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    #nginx.ingress.kubernetes.io/affinity-mode: "balanced"
    #nginx.ingress.kubernetes.io/affinity-canary-behavior: "legacy"
    #nginx.ingress.kubernetes.io/affinity: "cookie"
    #nginx.ingress.kubernetes.io/session-cookie-name: "route"
    #nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    #nginx.ingress.kubernetes.io/session-cookie-expires: "1725000"
    #nginx.ingress.kubernetes.io/session-cookie-max-age: "1725000"
    #kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: "/(.*)"
        pathType: Prefix
        backend:
          service:
            name: servicelb
            port:
              number: 8081

---
apiVersion: v1
kind: Service
metadata:
  name: ingress
  namespace: ingress
spec:
  selector:
    name: nginx-ingress-microk8s
  type: LoadBalancer
  #loadBalancerIP: 192.168.1.219
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: alt-http
      protocol: TCP
      port: 8080
      targetPort: 8080
    #- name: alt-http1
    #  protocol: TCP
    #  port: 8081
    #  targetPort: 8081
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443