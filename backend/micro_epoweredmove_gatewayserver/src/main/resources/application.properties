spring.application.name=gatewayserver
spring.security.user.name = admin
spring.security.user.password = admin

eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://eurekaserver:8070/eureka/

#SOS CORS Configuration
spring.cloud.gateway.default-filters.DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
#Line above is not needed maybe... Test with angular web project
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
#there is also addAllowedOriginPattern
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=Authorization,content-type
# spring.cloud.gateway.filter.secure-headers.disable=frame-options,download-options

#Fix error Spring MVC found on classpath, which is incompatible with Spring Cloud Gateway.
#For AuthInterceptor
#spring.main.web-application-type=reactive
#The bean 'requestMappingHandlerMapping', defined in class path resource [org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class] and overriding is disabled.
spring.main.allow-bean-definition-overriding=true

#No config server as of yet.
spring.cloud.config.enabled=false
spring.cloud.config.import-check.enabled=false
#spring.config.import=optional:configserver:http://localhost:8071/

management.endpoints.web.exposure.include=*
management.info.env.enabled = true
#management.server.port=9000

## Configuring info endpoint
info.app.name=Gateway Server Microservice
info.app.description=EPoweredMove Gateway Server Application
info.app.version=1.0.0


spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

logging.level.com.kosdiam.poweredmove.gatewayserver: DEBUG

# Micrometer related properties
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


